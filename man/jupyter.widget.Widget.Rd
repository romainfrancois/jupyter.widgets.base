% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_Widget.R
\name{jupyter.widget.Widget}
\alias{jupyter.widget.Widget}
\title{Base class for jupyter widgets}
\description{
Base class for jupyter widgets

Base class for jupyter widgets
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{model_id}}{the model id, i.e. the id of the associated comm object}

\item{\code{comm}}{the widget comm}

\item{\code{_model_module}}{the model module}

\item{\code{_model_module_version}}{the model module version}

\item{\code{_model_name}}{the model name}

\item{\code{_view_module}}{the view module}

\item{\code{_view_count}}{the view count}

\item{\code{_view_module_version}}{the view module version}

\item{\code{_view_name}}{the view name}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-jupyter.widget.Widget-new}{\code{jupyter.widget.Widget$new()}}
\item \href{#method-jupyter.widget.Widget-state}{\code{jupyter.widget.Widget$state()}}
\item \href{#method-jupyter.widget.Widget-update}{\code{jupyter.widget.Widget$update()}}
\item \href{#method-jupyter.widget.Widget-on_update}{\code{jupyter.widget.Widget$on_update()}}
\item \href{#method-jupyter.widget.Widget-on_custom}{\code{jupyter.widget.Widget$on_custom()}}
\item \href{#method-jupyter.widget.Widget-clone}{\code{jupyter.widget.Widget$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.Widget-new"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.Widget-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.Widget$new(
  `_model_module` = "@jupyter-widgets/base",
  `_model_module_version` = "2.0.0",
  `_model_name` = "",
  `_view_module` = "@jupyter-widgets/base",
  `_view_count` = NULL,
  `_view_module_version` = "2.0.0",
  `_view_name` = "",
  ...,
  error_call = caller_env()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{_model_module}}{The namespace of the model.}

\item{\code{_model_module_version}}{A semver requirement for namespace version containing the model.}

\item{\code{_model_name}}{model name}

\item{\code{_view_module}}{view mmodule}

\item{\code{_view_count}}{view count}

\item{\code{_view_module_version}}{view module version}

\item{\code{_view_name}}{view name}

\item{\code{...}}{unused}

\item{\code{error_call}}{see \code{\link[rlang:args_error_context]{rlang::args_error_context()}}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a new \code{jupyter.widget.Widget} object
get a state
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.Widget-state"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.Widget-state}{}}}
\subsection{Method \code{state()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.Widget$state(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{name of the state to get}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the current value of the state
update states

update state in the Widget object and send a comm
message to update the state in the front end too
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.Widget-update"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.Widget-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.Widget$update(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{states
Setup a handler to handle "update" messages from the front end}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.Widget-on_update"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.Widget-on_update}{}}}
\subsection{Method \code{on_update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.Widget$on_update(handler)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handler}}{handler function
Setup a handler to handle "update" messages from the front end}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.Widget-on_custom"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.Widget-on_custom}{}}}
\subsection{Method \code{on_custom()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.Widget$on_custom(handler)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handler}}{handler function}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.Widget-clone"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.Widget-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.Widget$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
